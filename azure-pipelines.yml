pool:
    vmImage: 'vs2017-win2016'
    demands:
        npm
        
variables:
    buildConfiguration: 'Release'
    wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
    dotnetSdkVersion: '2.1.505'

steps:
    - task: DotNetCoreInstaller@0    
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        version: $(dotnetSdkVersion)
        
    - task: SonarQubePrepare@4
      displayName: 'Prepare SonarQube (master only)'
      inputs:
          SonarQube: 'SonarCube_In_Azure'
          scannerMode: 'MSBuild'
          projectKey: '$(projectKey)'
          projectVersion: '$(Build.BuildNumber)'
          extraProperties: |
               sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/TestResults/Coverage/coverage.opencover.xml
               sonar.exclusions=**/wwwroot/lib/**/*
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script:  './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile SASS assets'

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - template: templates/build.yml
      parameters:
        buildConfiguration: 'Debug'

    - template: templates/build.yml
      parameters:
        buildConfiguration: 'Release'

    - task: SonarQubeAnalyze@4
      displayName: 'Run SQ Code Analysis (master only)'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    - task: SonarQubePublish@4
      displayName: 'Publish SQ Code Analysis (master only)'
      inputs:
         pollingTimeoutSec: '300'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()
